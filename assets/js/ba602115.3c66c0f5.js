"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[523],{40142:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new Bunch object from the given set of data.\\n```lua\\nlocal list = Bunch.new({1, 2, 3, 4, 5})\\n```","params":[{"name":"data","desc":"","lua_type":"{[any]: T}"}],"returns":[],"function_type":"static","source":{"line":38,"path":"src/Bunch/Bunch/init.luau"}},{"name":"isList","desc":"Returns a boolean describing whether the Bunch object contains at least one of more numeric indexes.\\n```lua\\nlocal isList = someBunch:isList()\\n```","params":[],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"method","source":{"line":49,"path":"src/Bunch/Bunch/init.luau"}},{"name":"map","desc":"Returns a new bunch object and uses the operations on each value.\\n```lua\\nlocal doubled = someBunch:map(Element * 2)\\n```","params":[{"name":"operations","desc":"","lua_type":"Element.Element"}],"returns":[{"desc":"","lua_type":"Bunch<T>\\r\\n"}],"function_type":"method","source":{"line":60,"path":"src/Bunch/Bunch/init.luau"}},{"name":"mapCall","desc":"Returns a new bunch object and uses the given function on each value.\\n```lua\\nlocal doubled = someBunch:map(function(v)\\n\\treturn v * 2\\nend)\\n```","params":[{"name":"func","desc":"","lua_type":"(v: T, ...any) -> T"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Bunch<T>\\r\\n"}],"function_type":"method","source":{"line":77,"path":"src/Bunch/Bunch/init.luau"}},{"name":"filter","desc":"Returns a new bunch object that is filtered by the operations given.\\n\\n:::caution\\nThe Element object should return a boolean value at the end.\\nIf the value is false or nil, the element will be removed from the Bunch.\\n:::\\n```lua\\nlocal evenOnly = someBunch:filter((Element % 2):equals(0))\\n\\nlocal moduleScripts = Bunch.new(someInstance:GetChildren()):filter(Element.ClassName:equals(\\"ModuleScript\\"))\\n```","params":[{"name":"operations","desc":"","lua_type":"Element.Element"}],"returns":[{"desc":"","lua_type":"Bunch<T>\\r\\n"}],"function_type":"method","source":{"line":99,"path":"src/Bunch/Bunch/init.luau"}},{"name":"filterCall","desc":"Returns a new bunch object that is filtered by the given function.\\n\\n```lua\\nlocal evenOnly = someBunch:filter(function(x) return x % 2 == 0 end)\\n```","params":[{"name":"operation","desc":"","lua_type":"(T) -> boolean"}],"returns":[{"desc":"","lua_type":"Bunch<T>\\r\\n"}],"function_type":"method","source":{"line":118,"path":"src/Bunch/Bunch/init.luau"}},{"name":"remove","desc":"Returns the value at the index after removing it from the bunch object.\\n```lua\\nlocal removed = someBunch:remove(\\"someProperty\\")\\n```","params":[{"name":"index","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"T\\r\\n"}],"function_type":"method","source":{"line":136,"path":"src/Bunch/Bunch/init.luau"}},{"name":"range","desc":"Returns the value at the index after removing it from the bunch object.\\n```lua\\nlocal first3Values = someBunch:range(1, 3)\\n```","params":[{"name":"from","desc":"","lua_type":"number"},{"name":"to","desc":"","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"Bunch<T>?\\r\\n"}],"function_type":"method","source":{"line":153,"path":"src/Bunch/Bunch/init.luau"}},{"name":"merge","desc":"Adds the non-numeric keys of \'other\' into a new bunch unless they already exist in the bunch.\\n```lua\\nlocal mixed = someBunch:merge(anotherTable)\\n```","params":[{"name":"other","desc":"","lua_type":"{}"}],"returns":[{"desc":"","lua_type":"Bunch<T>?\\r\\n"}],"function_type":"method","source":{"line":173,"path":"src/Bunch/Bunch/init.luau"}}],"properties":[{"name":"Element","desc":"For access to the [Element] module.","lua_type":"Element","source":{"line":26,"path":"src/Bunch/Bunch/init.luau"}}],"types":[],"name":"Bunch","desc":"A Collection/List/Table object with some nice utilities.","source":{"line":6,"path":"src/Bunch/Bunch/init.luau"}}')}}]);