"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[538],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,y=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return n?r.createElement(y,i(i({ref:t},p),{},{components:n})):r.createElement(y,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},53534:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:6},i="Custom Middleware",l={unversionedId:"customMiddleware",id:"customMiddleware",title:"Custom Middleware",description:"(from NeoNet)",source:"@site/docs/customMiddleware.md",sourceDirName:".",slug:"/customMiddleware",permalink:"/MyPackages/docs/customMiddleware",draft:!1,editUrl:"https://github.com/NeonD00m/MyPackages/edit/main/docs/customMiddleware.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"defaultSidebar",previous:{title:"Example place",permalink:"/MyPackages/docs/examplePlace"}},s={},u=[{value:"Admin Check",id:"admin-check",level:2},{value:"Squash Library Example",id:"squash-library-example",level:2}],p={toc:u};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"custom-middleware"},"Custom Middleware"),(0,a.kt)("p",null,"(from ",(0,a.kt)("a",{parentName:"p",href:"https://neond00m.github.io/NeoNet"},"NeoNet"),")"),(0,a.kt)("p",null,"Custom middleware is very important for all kinds of\nthings like creating loggers or checks to happen\nbefore a connection runs."),(0,a.kt)("p",null,"NeoNet makes creating custom middleware very easy, just make a function that returns a boolean.\nThis boolean will continue if true, and drop the request if false.\nObviously that does make it seem simpler than it really is, but here are the types so you\ncan see how they work in detail."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"type RemoteClientMiddleware = (\n    Parameters: {number: any} -- parameters incoming\n) -> (boolean, {number: any})\n--[[  result,  parameters ourgoing]]\n\ntype RemoteServerMiddleware = (\n    Player: Player, -- player who fired remote\n    Parameters: {number: any} -- parameters incoming\n) -> (boolean, {number: any})\n--[[  result,  parameters outgoing]]\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"If parameters outgoing are nil then NeoNet will automatically send the initial parameters, so\nmake sure to return a value other than nil if you want to remove the arguments.")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"For the RemoteServerMiddleware, make sure not to send the player as a parameter because it\nwill automatically be the first parameter for the connected function. That's also why the\nincoming parameters are separated from the player.")),(0,a.kt)("p",null,"Inside NeoNet you'll also find a 'TestMiddleware'\nobject that is very simple:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'return function(player, parameters)\n    if parameters then\n        print(player.Name, ", test middleware executed")\n    else\n        print("test middleware executed")\n    end\n    return true\nend\n')),(0,a.kt)("p",null,"But I'll provide another example since you probably\ndon't plan on adding middleware to print a player's\nname every time they fire an event."),(0,a.kt)("h2",{id:"admin-check"},"Admin Check"),(0,a.kt)("p",null,"For things like an admin panel, you most likely only\nwant your admins to be able to fire the events. Here\nis some very simple code you might use for this. Also\nunlike the two built-in middleware options something\nlike this can be reused for multiple connections."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"return function(player): RemoteServerMiddleware\n    return player:GetRankInGroup(GROUP_ID) >= 250\nend\n")),(0,a.kt)("h2",{id:"squash-library-example"},"Squash Library Example"),(0,a.kt)("p",null,"Let's use the ",(0,a.kt)("a",{parentName:"p",href:"https://data-oriented-house.github.io/Squash/"},"Squash")," library as an example of something you might implement in your own games.\nIn a modulescript we could return this after requiring Sqash and later use this as RemoteServerMiddleware."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"return function(typesExpected: {string}?): (...any) -> (boolean, {any})\n    return function(plr, ...)\n        local params = {...}\n        for i, v in params do\n            params[i] = Squash[typesExpected[i]].des(v)\n        end\n        return true, params\n    end\nend\n")))}m.isMDXComponent=!0}}]);